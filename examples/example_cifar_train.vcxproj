<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{0A922446-A1A0-3BE2-800A-3D5979AD3E87}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>example_cifar_train</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\workspace\tiny-dnn\examples\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">example_cifar_train.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">example_cifar_train</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\workspace\tiny-dnn\examples\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">example_cifar_train.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">example_cifar_train</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\workspace\tiny-dnn\examples\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">example_cifar_train.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">example_cifar_train</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\workspace\tiny-dnn\examples\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">example_cifar_train.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">example_cifar_train</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\workspace\tiny-dnn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;DNN_USE_IMAGE_API;CNN_USE_SSE;CNN_USE_AVX;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;DNN_USE_IMAGE_API;CNN_USE_SSE;CNN_USE_AVX;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\workspace\tiny-dnn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\workspace\tiny-dnn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/workspace/tiny-dnn/examples/Debug/example_cifar_train.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/workspace/tiny-dnn/examples/Debug/example_cifar_train.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\workspace\tiny-dnn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <ExceptionHandling>Sync</ExceptionHandling>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <FloatingPointModel>Fast</FloatingPointModel>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <OmitFramePointers>true</OmitFramePointers>
      <Optimization>Full</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level4</WarningLevel>
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;DNN_USE_IMAGE_API;CNN_USE_SSE;CNN_USE_AVX;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;DNN_USE_IMAGE_API;CNN_USE_SSE;CNN_USE_AVX;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\workspace\tiny-dnn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\workspace\tiny-dnn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/workspace/tiny-dnn/examples/Release/example_cifar_train.lib</ImportLibrary>
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
      <ProgramDataBaseFile>D:/workspace/tiny-dnn/examples/Release/example_cifar_train.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\workspace\tiny-dnn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;DNN_USE_IMAGE_API;CNN_USE_SSE;CNN_USE_AVX;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;DNN_USE_IMAGE_API;CNN_USE_SSE;CNN_USE_AVX;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\workspace\tiny-dnn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\workspace\tiny-dnn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/workspace/tiny-dnn/examples/MinSizeRel/example_cifar_train.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/workspace/tiny-dnn/examples/MinSizeRel/example_cifar_train.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\workspace\tiny-dnn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;DNN_USE_IMAGE_API;CNN_USE_SSE;CNN_USE_AVX;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;DNN_USE_IMAGE_API;CNN_USE_SSE;CNN_USE_AVX;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\workspace\tiny-dnn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\workspace\tiny-dnn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/workspace/tiny-dnn/examples/RelWithDebInfo/example_cifar_train.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/workspace/tiny-dnn/examples/RelWithDebInfo/example_cifar_train.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\workspace\tiny-dnn\examples\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/workspace/tiny-dnn/examples/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/workspace/tiny-dnn -BD:/workspace/tiny-dnn --check-stamp-file D:/workspace/tiny-dnn/examples/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\workspace\tiny-dnn\examples\benchmarks_all_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_cifar_test_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_cifar_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_deconv_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_deconv_visual_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_mnist_quantized_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_mnist_test_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_mnist_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_recurrent_addition_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_sinus_fit_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_ssd_test_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_test_char_rnn_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_train_char_rnn_CXX_cotire.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\workspace\tiny-dnn\examples\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/workspace/tiny-dnn/examples/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/workspace/tiny-dnn -BD:/workspace/tiny-dnn --check-stamp-file D:/workspace/tiny-dnn/examples/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\workspace\tiny-dnn\examples\benchmarks_all_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_cifar_test_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_cifar_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_deconv_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_deconv_visual_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_mnist_quantized_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_mnist_test_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_mnist_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_recurrent_addition_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_sinus_fit_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_ssd_test_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_test_char_rnn_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_train_char_rnn_CXX_cotire.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\workspace\tiny-dnn\examples\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/workspace/tiny-dnn/examples/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/workspace/tiny-dnn -BD:/workspace/tiny-dnn --check-stamp-file D:/workspace/tiny-dnn/examples/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\workspace\tiny-dnn\examples\benchmarks_all_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_cifar_test_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_cifar_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_deconv_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_deconv_visual_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_mnist_quantized_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_mnist_test_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_mnist_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_recurrent_addition_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_sinus_fit_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_ssd_test_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_test_char_rnn_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_train_char_rnn_CXX_cotire.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\workspace\tiny-dnn\examples\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/workspace/tiny-dnn/examples/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/workspace/tiny-dnn -BD:/workspace/tiny-dnn --check-stamp-file D:/workspace/tiny-dnn/examples/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\workspace\tiny-dnn\examples\benchmarks_all_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_cifar_test_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_cifar_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_deconv_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_deconv_visual_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_mnist_quantized_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_mnist_test_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_mnist_train_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_recurrent_addition_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_sinus_fit_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_ssd_test_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_test_char_rnn_CXX_cotire.cmake;D:\workspace\tiny-dnn\examples\example_train_char_rnn_CXX_cotire.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\workspace\tiny-dnn\examples\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="D:\workspace\tiny-dnn\examples\cifar10\train.cpp" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\activations\activation_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\activations\asinh_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\activations\elu_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\activations\leaky_relu_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\activations\relu_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\activations\selu_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\activations\sigmoid_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\activations\softmax_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\activations\softplus_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\activations\softsign_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\activations\tanh_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\activations\tanh_p1m2_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\config.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\backend.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\backend_avx.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\backend_tiny.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\framework\device.fwd.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\framework\device.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\framework\op_kernel.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\framework\program.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\framework\program_manager.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\framework\tensor.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\framework\tensor_utils.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\avx_deconv2d_back_kernel.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\avx_deconv2d_kernel.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\avx_kernel_common.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\conv2d_grad_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\conv2d_grad_op_avx.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\conv2d_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\conv2d_op_avx.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\conv2d_op_internal.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\conv2d_op_libdnn.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\conv2d_op_nnpack.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\conv2d_op_opencl.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\fully_connected_grad_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\fully_connected_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\fully_connected_op_avx.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\fully_connected_op_cblas.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\fully_connected_op_intel_mkl.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\fully_connected_op_internal.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\fully_connected_op_nnpack.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\global_avepool_grad_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\global_avepool_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\global_avepool_op_avx.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\global_avepool_op_internal.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\gru_cell_grad_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\gru_cell_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\gru_cell_op_internal.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\lstm_cell_grad_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\lstm_cell_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\lstm_cell_op_internal.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\maxpool_grad_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\maxpool_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\maxpool_op_avx.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\maxpool_op_internal.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\maxpool_op_nnpack.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\nnp_deconv2d_kernel.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\rnn_cell_grad_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\rnn_cell_op.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\rnn_cell_op_internal.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\tiny_deconv2d_back_kernel.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\tiny_deconv2d_kernel.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\tiny_quantization_kernel.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\tiny_quantized_conv2d_kernel.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\tiny_quantized_deconv2d_kernel.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\tiny_quantized_fully_connected_kernel.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\kernels\tiny_quantized_matmul_kernel.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\params\conv_params.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\params\deconv_params.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\params\fully_params.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\params\global_avepool_params.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\params\gru_cell_params.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\params\lstm_cell_params.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\params\maxpool_params.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\params\params.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\params\rnn_cell_params.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\core\session.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\io\caffe\layer_factory.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\io\caffe\layer_factory_impl.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\io\cifar10_parser.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\io\display.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\io\layer_factory.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\io\mnist_parser.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\arithmetic_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\average_pooling_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\average_unpooling_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\batch_normalization_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\cell.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\cells.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\concat_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\convolutional_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\deconvolutional_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\dropout_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\fully_connected_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\global_average_pooling_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\gru_cell.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\input_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\l2_normalization_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\layers.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\linear_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\lrn_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\lstm_cell.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\max_pooling_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\max_unpooling_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\partial_connected_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\power_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\quantized_convolutional_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\quantized_deconvolutional_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\quantized_fully_connected_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\recurrent_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\rnn_cell.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\slice_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\layers\zero_pad_layer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\lossfunctions\loss_function.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\models\alexnet.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\network.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\node.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\nodes.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\optimizers\optimizer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\tiny_dnn.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\aligned_allocator.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\colored_print.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\deform.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\deserialization_helper.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\gradient_check.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\graph_visualizer.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\image.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\macro.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\math_functions.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\nms.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\nn_error.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\parallel_for.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\product.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\random.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\serialization_functions.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\serialization_helper.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\serialization_layer_list.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\target_cost.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\util.h" />
    <ClInclude Include="D:\workspace\tiny-dnn\tiny_dnn\util\weight_init.h" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\workspace\tiny-dnn\ZERO_CHECK.vcxproj">
      <Project>{D96E140D-3DE1-3F2A-ACA0-591942C55D5A}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>